services:
  db:
    image: postgres:14.3-alpine
    hostname: my-finances-postgres
    container_name: my-finances-postgres
    restart: on-failure
    environment:
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
#      - db-postgres:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    networks:
      - my-net

  dbt:
    image: ghcr.io/pablopardogarcia/my-finances-dbt:test
    build:
      context: ./dbt
      target: test
    container_name: my-finances-dbt
    ports:
      - "8080:8080"
      - "8000:8000"
    environment:
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_HOST=${POSTGRES_HOST}
    depends_on:
      - db
    networks:
      - my-net

  api:
    image: ghcr.io/pablopardogarcia/my-finances-api:test
    build:
      context: ./api
      target: test
    container_name: my-finances-api
    ports:
      - "8001:80"
    environment:
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_HOST=${POSTGRES_HOST}
    depends_on:
      - db
    networks:
      - my-net

  frontend:
    image: ghcr.io/pablopardogarcia/my-finances-frontend:test
    build:
      context: ./frontend
      target: test
    container_name: my-finances-frontend
    ports:
      - "80:80"
    depends_on:
      - db
      - dbt
      - api
    networks:
      - my-net

networks:
  my-net:

volumes:
  db-postgres:
