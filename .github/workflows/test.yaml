name: Run test
on:
  pull_request:
    branches: [ "master" ]

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read

    outputs:
      api: ${{ steps.filter.outputs.api }}
      dbt: ${{ steps.filter.outputs.dbt }}
      frontend: ${{ steps.filter.outputs.frontend }}

    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api:
              - 'api/**'
            dbt:
              - 'dbt/**'
            frontend:
              - 'frontend/**'

  api:
    name: api
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REPOSITORY }}

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          directory: ./
          fail_on_empty: true

      - name: Run Tests
        run: docker-compose -f docker-compose-tests.yaml up --build api

  frontend:
    name: frontend
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REPOSITORY }}

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          directory: ./
          fail_on_empty: true

      - name: Run Tests
        run: docker-compose -f docker-compose-tests.yaml up --build frontend

  dbt:
    name: dbt
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.dbt == 'true' }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REPOSITORY }}

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          directory: ./
          fail_on_empty: true

      - name: Run Tests
        run: docker-compose -f docker-compose-tests.yaml up --build dbt
