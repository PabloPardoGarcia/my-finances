name: Run test
on:
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read

    outputs:
      api: ${{ steps.filter.outputs.api }}
      dbt: ${{ steps.filter.outputs.dbt }}
      frontend: ${{ steps.filter.outputs.frontend }}

    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api:
              - 'api/**'
            dbt:
              - 'dbt/**'
            frontend:
              - 'frontend/**'

  api:
    name: Run api tests
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REPOSITORY }}
      
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_USERNAME }}/my-finances-api:test
          target: test

      - name: Run Test
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_USERNAME }}/my-finances-api:test
          options: |
            -e POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            -e POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            -e POSTGRES_DB=${{ secrets.POSTGRES_DB }}

  frontend:
    name: Run frontend tests
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REPOSITORY }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_USERNAME }}/my-finances-frontend:test
          target: test

      - name: Run Test
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_USERNAME }}/my-finances-frontend:test
          options: |
            -e POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            -e POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            -e POSTGRES_DB=${{ secrets.POSTGRES_DB }}

  dbt:
    name: Run dbt tests
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.dbt == 'true' }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REPOSITORY }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: ./dbt
          file: ./dbt/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_USERNAME }}/my-finances-dbt:test
          target: test

      - name: Run Test
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_USERNAME }}/my-finances-dbt:test
          options: |
            -e POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            -e POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            -e POSTGRES_DB=${{ secrets.POSTGRES_DB }}
