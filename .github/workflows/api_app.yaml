name: API PyTest
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
      # Mobile folder working directory.
        working-directory: app

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            app:
              - 'app/**'

      - name: Create .env file
        if: steps.filter.outputs.app == 'true'
        run: |
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env

      # Setup Python (faster than using Python container)
      - name: Setup Python
        if: steps.filter.outputs.app == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel
        id: cache-pipenv
        if: steps.filter.outputs.Mobile == 'true'
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: |
          steps.cache-pipenv.outputs.cache-hit != 'true' &&
          steps.filter.outputs.Mobile == 'true'
        run: |
          pipenv install --deploy --dev

      - name: Run tests
        if: steps.filter.outputs.Mobile == 'true'
        run: |
          pipenv run tests/ -v